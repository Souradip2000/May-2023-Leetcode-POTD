// this code gives signed integer overflow error

class Solution {
public:
    int arraySign(vector<int>& nums) {
        long long product =1;
        for(int i: nums)
        {
            product*=i;
            //cout<<"new product : "<<product;
        }
        if(product==0)
            return 0;
        else if(product>0)
            return 1;
        else 
            return -1;
    }
};



// accepted - beats 18% of the solutions

class Solution {
public:
    int arraySign(vector<int>& nums) {
        // multiply and retain only the result to return for every element in the vector

        // Method 2
        /*
        sort the array
        count the number of negative numbers
        search for zero - if found, return zero
        if number of negative numbers is odd, return -1
        else return 1
        */

        sort(nums.begin(), nums.end());
        int count=0;
        for(int i=0; i<nums.size(); i++)
        {
            if(nums[i]<0)
            {
                count++;
            }
            else if(nums[i]==0)
                return 0;
            
        }
        if(count%2==0)
            return 1;
        else
            return -1;
    }
};
