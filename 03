// accepted - beats 5.4% of the solutions
// time complexity : O(n^2)

class Solution {
public:
    vector<vector<int>> findDifference(vector<int>& nums1, vector<int>& nums2) {

        vector<vector<int>> answer;
        vector<int> ans1;
        vector<int> ans2;

       for(int i=0; i<nums1.size(); i++)
       {
           int flag=0;
           for(int j=0; j<nums2.size(); j++)
           {
               if(nums1[i]==nums2[j])
               {
                   flag=1;
                   break;
               }
           }
            if(flag==0)
            {
                int found=0;
                for(int a=0; a<ans1.size(); a++)
                {
                    if(ans1[a]==nums1[i])
                    {
                        found=1;
                        break;
                    }
                }
                if(found==0)
                    ans1.push_back(nums1[i]);
            }
       } 

       for(int i=0; i<nums2.size(); i++)
       {
           int flag=0;
           for(int j=0; j<nums1.size(); j++)
           {
               if(nums2[i]==nums1[j])
               {
                   flag=1;
                   break;
               }
           }
            if(flag==0)
            {
                int found=0;
                for(int a=0; a<ans2.size(); a++)
                {
                    if(ans2[a]==nums2[i])
                    {
                        found=1;
                        break;
                    }
                }
                if(found==0)
                    ans2.push_back(nums2[i]);
            }
       }

       answer.push_back(ans1);
       answer.push_back(ans2);

       return answer;
    }
};
